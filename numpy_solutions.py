# -*- coding: utf-8 -*-
"""numpy_solutions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/PersonalAlexander/e36684bd4981c8db1c1a3e75d203e911/numpy_solutions.ipynb
"""

#Создайте массив из 10 нулей
import numpy as np
s = np.zeros (10)
print(s)

#Создать массив из 10 единиц
s = np.ones(10)
print(s)

#Создать массив из 10 пятерок
s = np.linspace(5,5,10)
print(s)

#Создать массив из целых чисел от 10 до 50
s = np.arange (10,51)
print(s)

#Создать массив из четных чисел от 10 до 50
s = np.arange (10,51,2)
print(s)

#Создать матрицу 3х3 с числами от 0 до 8
s = np.arange(9).reshape(3,3)
print(s)

#Создать единичную матрицу 3x3
s = np.eye(3)
print(s)

#Используйте NumPy для генерации случайного числа от 0 до 1
s = np.random.rand(1)
print(s)

#Используйте NumPy для генерации массива из 25 случайных чисел,взятых из стандартного нормального распределения

s = np.random.randn(25)
print(s)

#Создайте следующую матрицу используя функции библиотеки NumPy
s = np.arange(0.01,1.01,0.01)
print(s)

#Необходимо написать код который вернет следующую матрицуиз стартовой:
mat = np.arange(1,26).reshape(5,5)
a=mat[2:,1:]
print(a)

#Написать код обращения к элементу который вернет значение  20 из стартовой матрицы задачи l.
mat = np.arange(1,26).reshape(5,5)
a=mat[3:4,4:]
print(a)

#Написать код к стартовой матрице задачи l , который воспроизводит вывод, показанный ниже
mat = np.arange(1,26).reshape(5,5)
a=mat[0:3,1]
print(a)

#Написать код к стартовой матрице задачи l , который воспроизводитвывод, показанный ниже
mat = np.arange(1,26).reshape(5,5)
a=mat[4:]
print(a)

#Написать код к стартовой матрице задачи l , который воспроизводит вывод, показанный ниже
mat = np.arange(1,26).reshape(5,5)
a=mat[3:]
print(a)

#Получить сумму всех значений в стартовой матрице mat
mat = np.arange(1,26).reshape(5,5)
a=np.sum(mat)
print(a)

#Получить стандартное отклонение в стартовой матрице mat
mat = np.arange(1,26).reshape(5,5)
a=np.std(mat)
print(a)

#Получить сумму значений в колонках в стартовой матрице mat
mat = np.arange(1,26).reshape(5,5)
a=np.sum(mat,axis=1)
print(a)